generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?   @db.VarChar(255)
  address      String?   @db.VarChar(255)
  phone_number String?   @db.VarChar(255)
  website      String?   @db.VarChar(255)
  name         String    @db.VarChar(255)
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  user_id      String    @db.Uuid
  tenant_id    String    @db.VarChar(255)
  user         user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project      project[]
}

model project {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String    @db.VarChar(255)
  description        String?   @db.VarChar(255)
  start_date         DateTime? @db.Timestamp(6)
  end_date           DateTime? @db.Timestamp(6)
  status             String?   @db.VarChar(255)
  company_id         String    @db.Uuid
  project_manager_id String    @db.Uuid
  created_at         DateTime  @default(now()) @db.Timestamp(6)
  updated_at         DateTime  @default(now()) @db.Timestamp(6)
  company            company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user               user      @relation(fields: [project_manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  task               task[]
}

model skill {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String       @db.VarChar(255)
  description String?      @db.VarChar(255)
  level       Int?
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  user_skill  user_skill[]
}

model task {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  start_date  DateTime? @db.Timestamp(6)
  end_date    DateTime? @db.Timestamp(6)
  status      String?   @db.VarChar(255)
  project_id  String    @db.Uuid
  assigned_to String    @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user        user      @relation(fields: [assigned_to], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project     project   @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String       @unique @db.VarChar(255)
  firstName   String?      @db.VarChar(255)
  lastName    String?      @db.VarChar(255)
  roq_user_id String       @db.VarChar(255)
  tenant_id   String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  company     company[]
  project     project[]
  task        task[]
  user_skill  user_skill[]
}

model user_skill {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  skill_id   String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  skill      skill    @relation(fields: [skill_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
